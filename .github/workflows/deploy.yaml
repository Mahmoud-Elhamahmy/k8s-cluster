name: Deploy Kubernetes on AWS

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Save Outputs
        id: tfoutputs
        working-directory: terraform
        run: |
          echo "MASTER_IP=$(terraform output -raw master_public_ip)" >> $GITHUB_ENV
          echo "WORKER_IPS=$(terraform output -json worker_public_ips)" >> $GITHUB_ENV

  k8s:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - uses: actions/checkout@v4

      - name: Install SSH & Kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y ssh jq kubectl

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy kubeconfig
        run: |
          echo "${MASTER_IP}"
          scp -o StrictHostKeyChecking=no ubuntu@${MASTER_IP}:/home/ubuntu/.kube/config ./kubeconfig
          mkdir -p ~/.kube
          cp ./kubeconfig ~/.kube/config

      - name: Fetch Join Command
        run: |
          scp -o StrictHostKeyChecking=no ubuntu@${MASTER_IP}:/home/ubuntu/join.sh ./join.sh
          chmod +x ./join.sh

      - name: Join Workers
        run: |
          echo '${{ env.WORKER_IPS }}' | jq -r '.[]' | while read ip; do
            scp -o StrictHostKeyChecking=no ./join.sh ubuntu@$ip:/tmp/join.sh
            ssh -o StrictHostKeyChecking=no ubuntu@$ip "sudo bash /tmp/join.sh"
          done

      - name: Verify Cluster
        run: kubectl get nodes -o wide

      - name: Deploy Ingress Controller
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

      - name: Deploy Juice Shop
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/juice-shop-deployment.yaml
          kubectl apply -f k8s/juice-shop-service.yaml
          kubectl apply -f k8s/juice-shop-ingress.yaml
